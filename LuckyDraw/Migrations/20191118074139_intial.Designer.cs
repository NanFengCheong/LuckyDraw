// <auto-generated />
using System;
using LuckyDraw.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LuckyDraw.Migrations
{
    [DbContext(typeof(LuckyDrawContext))]
    [Migration("20191118074139_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LuckyDraw.Model.Employee", b =>
                {
                    b.Property<string>("WWID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WWID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("LuckyDraw.Model.Prize", b =>
                {
                    b.Property<int>("PrizeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("CollectTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DrawTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PrizeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WWID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PrizeID");

                    b.HasIndex("WWID");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("LuckyDraw.Model.Prize", b =>
                {
                    b.HasOne("LuckyDraw.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("WWID");
                });
#pragma warning restore 612, 618
        }
    }
}
